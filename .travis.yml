language: cpp


env:
  global:
    - SYNERGY_ENTERPRISE=ON


before_install:

  # util function for customizing travis build output log
  - |-
    function travisfold() { echo -en "travis_fold:$1:$2\r" ; }
    function travisfoldblock() { travisfold start "$1" ; cat ; travisfold end "$1" ; }

    RED="\033[31;1m"; GREEN="\033[32;1m"; RESET="\033[0m"
    function travis_color() { echo -e "${!1}" "${@:2}" ; }

    function travisfoldtitled() { { travis_color GREEN "$2" ; cat ; } 2>&1 | travisfoldblock "$1" ; }

    function traviscolordiagcmd() { { travis_color "$1" "${@:3}" ; ${@:3} ; } 2>&1 | travisfoldblock "$2" ; }
    function travislogdiagcmd() { traviscolordiagcmd GREEEN "$@" ; }
    function traviserrdiagcmd()  { traviscolordiagcmd RED "$@" ; }

  # various util function
  - |-
    function mkparentdir() { mkdir -p "$(realpath "$(dirname "$1")")" ; }

    function my_du() { du --max-depth=1 -h --time "$@" | awk -F '\t' '{OFS="\t"}{print $3, $2 $1}' | sort ; }

    function winexec { "$(realpath "$1")" "${@:2}" ; }


before_script:
  # unset sensitive information from variables to prevent printing them to output log
  - unset QT_ACCOUNT_TOKEN


jobs:
  include:

    - name: windows
      os: windows
#      solution:
      env:
        - DOWNLOAD_DIR='C:\downloads'
        - QT_ONLINE_INSTALLER_URL='https://download.qt.io/archive/online_installers/3.2/qt-unified-windows-x86-3.2.3-online.exe'
        - QT_INSTALL_DIR='C:\Qt'
        - QT_INSTALL_MSVC_SUBDIR='5.9.9\msvc2015_64'
        - QT_INSTALL_PACKAGES='qt.qt5.599.win64_msvc2015_64'
        - CMAKE_PREFIX_PATH="${QT_INSTALL_DIR}\\${QT_INSTALL_MSVC_SUBDIR}"

        - MSBUILD_TOOLS_VERSION_FULL='14.0.25420.1'
        - WIX_TOOLSET_VERSION='3.11.1'

        - CMAKE_GENERATOR='Visual Studio 14 2015'
        - CMAKE_GENERATOR_PLATFORM='x64'
        - CMAKE_GENERATOR_TOOLSET='v140,host=x64'

        - Platform='X64'
        - VCTargetsPath='C:\Program Files (x86)\MSBuild\Microsoft.Cpp\v4.0\V140'
        - msbuild_path='C:\Program Files (x86)\MSBuild\14.0\Bin\amd64\MSBuild.exe'

      cache:
        directories:
          - "$DOWNLOAD_DIR"
          - "$QT_INSTALL_DIR"

      install:
        - |-
          function cached() { [[ -e "$1" ]] && echo "### using cached '$1' ${2:+($2)}" ; }

        - |-
          if ! cached "$CMAKE_PREFIX_PATH" 'CMake Qt MSVC prefix path'; then
            export QT_INSTALLER_PATH="${DOWNLOAD_DIR}\\${QT_ONLINE_INSTALLER_URL##*/}"

            travisfoldtitled 'get.Qt.online.installer' '### getting Qt online installer' < <(
              if ! cached "$QT_INSTALLER_PATH" 'Qt online installer'; then
                echo '### downloading Qt online installer'
                mkparentdir "$QT_INSTALLER_PATH"
                wget --progress=dot:giga "$QT_ONLINE_INSTALLER_URL" -O "$QT_INSTALLER_PATH"
              fi
            )

            travisfoldtitled 'set.Qt.account.login' '### setting Qt account login' < <(
              qt_account_ini_path="${APPDATA}\\Qt\\qtaccount.ini"
              mkparentdir "$qt_account_ini_path"
              printf '%s\n' '[QtAccount]' "email=$QT_ACCOUNT_LOGIN" "jwt=$QT_ACCOUNT_TOKEN" > "$qt_account_ini_path"
            )

            travisfoldtitled 'install.Qt' '### installing Qt dependencies using Qt online installer' < <(
              mkparentdir "$QT_INSTALL_DIR"
              "$(realpath "$QT_INSTALLER_PATH")" -v --script 'travis_windows\install-qt.qs' 2>&1 | tee ~/'install-qt.out' | awk 'NR<42||/QTCI/'

            [[ -d "$CMAKE_PREFIX_PATH" ]] || { echo '### !!! Error installing Qt' ; echo $_ >&2 ; cat ~/'install-qt.out' ; false ; }
          fi

        - |-
          function my_diff() { comm --total -3 --output-delimiter=$'\t\t\t\t\t' "$1" "$2" | column -t -s $'\t' ; }

        - my_du_dirs_home=("$DOWNLOAD_DIR" "$QT_INSTALL_DIR" "$CMAKE_PREFIX_PATH" "$TRAVIS_BUILD_DIR")
        - my_du_dirs_progfiles=("$DOWNLOAD_DIR" "$QT_INSTALL_DIR" "$CMAKE_PREFIX_PATH" "$TRAVIS_BUILD_DIR")
        - my_du_dirs_user=("${HOMEDRIVE}${HOMEPATH}")

#        - my_du "$DOWNLOAD_DIR" "$QT_INSTALL_DIR" "$CMAKE_PREFIX_PATH"
#        - my_du 'C:\Program Files'
#        - my_du 'C:\Program Files (x86)'
#        - my_du "$TRAVIS_BUILD_DIR"

        - my_du "${my_du_dirs_home[@]}" | tee ~/du_home_1.txt
        - my_du "${my_du_dirs_progfiles[@]}" | tee ~/du_progfiles_1.txt
        - my_du "${my_du_dirs_user[@]}" | tee ~/du_user_1.txt

        - powershell Install-WindowsFeature Net-Framework-Core
        - my_du "${my_du_dirs_home[@]}" | tee ~/du_home_2.txt
        - my_du "${my_du_dirs_progfiles[@]}" | tee ~/du_progfiles_2.txt
        - my_du "${my_du_dirs_user[@]}" | tee ~/du_user_2.txt

        - cinst microsoft-build-tools --version "$MSBUILD_TOOLS_VERSION_FULL" --side-by-side
        - my_du "${my_du_dirs_home[@]}" | tee ~/du_home_3.txt
        - my_du "${my_du_dirs_progfiles[@]}" | tee ~/du_progfiles_3.txt
        - my_du "${my_du_dirs_user[@]}" | tee ~/du_user_3.txt

        - cinst visualcpp-build-tools --version "$MSBUILD_TOOLS_VERSION_FULL"
        - my_du "${my_du_dirs_home[@]}" | tee ~/du_home_4.txt
        - my_du "${my_du_dirs_progfiles[@]}" | tee ~/du_progfiles_4.txt
        - my_du "${my_du_dirs_user[@]}" | tee ~/du_user_4.txt

        - cinst wixtoolset --version "$WIX_TOOLSET_VERSION"
        - my_du "${my_du_dirs_home[@]}" | tee ~/du_home_5.txt
        - my_du "${my_du_dirs_progfiles[@]}" | tee ~/du_progfiles_5.txt
        - my_du "${my_du_dirs_user[@]}" | tee ~/du_user_5.txt

        - ls -l ~/du_home_*.txt
        - md5sum ~/du_home_*.txt

        - travisfoldblock 'du.home.md5.travisfoldblock' < <(
            ls -l ~/du_home_*.txt;
            md5sum ~/du_home_*.txt
          )

        - travisfoldtitled 'du.home.md5.travisfoldtitled' '### du _ home _ md5 _ travisfoldtitled' < <(
            ls -l ~/du_home_*.txt;
            md5sum ~/du_home_*.txt
          )

        - traviserrdiagcmd 'du.home.md5.traviserrdiagcmd.one' ls -l ~/du_home_*.txt
        - traviserrdiagcmd 'du.home.md5.traviserrdiagcmd.two' md5sum ~/du_home_*.txt
        - travislogdiagcmd 'du.home.md5.travislogdiagcmd.one' ls -l ~/du_home_*.txt
        - travislogdiagcmd 'du.home.md5.travislogdiagcmd.two' md5sum ~/du_home_*.txt

        - ls -l ~/du_progfiles_*.txt
        - md5sum ~/du_progfiles_*.txt
        - my_diff ~/du_progfiles_1.txt ~/du_progfiles_2.txt
        - my_diff ~/du_progfiles_2.txt ~/du_progfiles_3.txt
        - my_diff ~/du_progfiles_3.txt ~/du_progfiles_4.txt
        - my_diff ~/du_progfiles_4.txt ~/du_progfiles_5.txt

        - ls -l ~/du_user_*.txt
        - md5sum ~/du_user_*.txt
        - my_diff ~/du_user_1.txt ~/du_user_2.txt
        - my_diff ~/du_user_2.txt ~/du_user_3.txt
        - my_diff ~/du_user_3.txt ~/du_user_4.txt
        - my_diff ~/du_user_4.txt ~/du_user_5.txt


      script:
        - echo '##### script -##### (jobs-include-windows-script) '
        - mkdir 'build' && cd $_

        # cmake -G 'Visual Studio 14 2015' -A 'x64' -T 'v140,host=x64' -D 'CMAKE_BUILD_TYPE=Debug' '..'
        - echo '# CMake generate';
          cmake -D 'CMAKE_BUILD_TYPE=Debug' '..'

        - echo '# CMake build';
          cmake --build '.'

        # "C:/Program Files (x86)/MSBuild/14.0/Bin/amd64/MSBuild.exe' /p:Configuration=Debug /p:Platform=x64 /verbosity:diag
        - echo '# MSBuild WIX installer';
          cd installer;
          "$(realpath "$msbuild_path")" //p:Configuration=Debug //verbosity:diag


        - false;


      after_failure:
        - echo '##### after_failure -##### (jobs-include-windows-after_failure)'

        - cmake_output_log="${TRAVIS_BUILD_DIR}/build/CMakeFiles/CMakeOutput.log";
          echo "# $cmake_output_log :";
          cat "$cmake_output_log";

        - traviserrdiagcmd 'du.program.files.dirs.one' my_du 'C:\Program Files' 'C:\Program Files (x86)'
        - traviserrdiagcmd 'du.program.files.dirs.two' "my_du 'C:\Program Files' 'C:\Program Files (x86)'"


    - name: linux
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: 'ppa:lopin/git-buildpackage-backports'
          packages:
            - cmake make g++
            - libssl-dev libsodium-dev libcurl4-openssl-dev libavahi-compat-libdnssd-dev libsystemd-dev
            - xorg-dev libx11-dev libgl1-mesa-glx libegl1-mesa
            - qtbase5-dev qtdeclarative5-dev libqt5svg5-dev
            - dpkg-dev git-buildpackage fakeroot debhelper

      script:
        - echo '##### script -##### (jobs-include-linux-script)'
        - |-
          travisfoldtitled 'create.debian.changelog.from.git.history' '# create debian/changelog from git history' < <(
            gbp dch --ignore-branch
          )
          travisfoldtitled 'make.linux.DEB.package' '# make linux DEB package' < <(
            dpkg-buildpackage -us -uc
          )

#        - travisfoldtitled 'create.debian.changelog.from.git.history' '# create debian/changelog from git history' < <(
#            gbp dch --ignore-branch
#          )
#        - travisfoldtitled 'make.linux.DEB.package' '# make linux DEB package' < <(
#            dpkg-buildpackage -us -uc
#          )


after_script:
  - echo '##### after_script -#####'

  - which -a msbuild
  - which -a MSBuild.exe
  - where msbuild

  - du -h -d 1 ~ "$TRAVIS_BUILD_DIR"
  - find "$TRAVIS_BUILD_DIR" -print0 | xargs -0 ls -ld

  - traviserrdiagcmd 'find.from.root.one' find / -iname '*msbuild*' -print0 \| xargs -0 ls -ld
  - traviserrdiagcmd 'find.from.root.two' "find / -iname '*msbuild*' -print0 | xargs -0 ls -ld"

  - env


after_failure:
  - echo '##### after_failure -#####'
  - echo "# PWD=$PWD"
