language: cpp


env:
  global:
    - SYNERGY_ENTERPRISE=ON


jobs:
  include:

    - name: windows
      os: windows
#      solution:
      env:
        - DOWNLOAD_DIR='C:\downloads'
        - QT_INSTALL_DIR='C:\Qt'
        - QT_INSTALL_MSVC_SUBDIR='5.9.9\msvc2015_64'
        - QT_INSTALL_MSVC_PACKAGE='qt.qt5.599.win64_msvc2015_64'
        - CMAKE_PREFIX_PATH="${QT_INSTALL_DIR}\\${QT_INSTALL_MSVC_SUBDIR}"
      install:
        - |-
          if ! [[ -d "$CMAKE_PREFIX_PATH" ]]; then
            export QT_INSTALLER_PATH="${DOWNLOAD_DIR}\\qt-unified-windows-x86-online.exe"
            if ! [[ -f "$QT_INSTALLER_PATH" ]]; then
              ./travis_windows/download-qt-installer.sh
            else
              echo '### using cached Qt online installer';
            fi

            ./travis_windows/set-qt-account.sh

            ./travis_windows/install-qt.sh

          else
            echo '### using cached installed Qt prerequisites'
          fi
        - ls -ld "$CMAKE_PREFIX_PATH"
        - du -h -d 1 "$DOWNLOAD_DIR" "$QT_INSTALL_DIR" "$CMAKE_PREFIX_PATH"
        - ./travis_windows/install-wix.sh
        - '[[ -d "$CMAKE_PREFIX_PATH" ]]'
      cache:
        directories:
          - "$DOWNLOAD_DIR"
          - "$QT_INSTALL_DIR"
      script:
        - echo '##### script -##### (jobs-include-windows-script) '
        - mkdir 'build' && cd $_
        - export PATH="/c/Program Files (x86)/MSBuild/14.0/Bin/amd64:$PATH"
        - >-
          echo '# cmake generator';
          echo cmake -A x64 -T host=x64 ..;
          echo cmake -T 'v140,host=x64' -DCMAKE_BUILD_TYPE=Debug ..;
          cmake .. -G "Visual Studio 14 2015" -A x64 -T v140,host=x64
          pwd;
          echo MSBuild.exe /p:Configuration=Debug /p:Platform=x64 synergy-core.sln
        - >-
          echo '# cmake build';
          cmake --build .
        - cd installer
        - pwd
        - find
        - MSBuild.exe /p:Configuration=Debug /p:Platform=x64
        - echo export MSBuildExtensionsPath='C:\Program Files (x86)\MSBuild'
        - echo which -a msbuild
        - echo which -a MSBuild.exe
#        - export PATH="$PATH:/c/Program Files (x86)/Microsoft Visual Studio/2017/BuildTools/MSBuild/15.0/Bin/amd64/"
        - echo which -a MSBuild.exe
        - echo MSBuild.exe '/p:Configuration=Debug' 2>&1

      after_failure:
        - echo '##### after_failure -##### (jobs-include-windows-after_failure)'
        - echo "# CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH"
        - >-
          cmake_output_log="${TRAVIS_BUILD_DIR}/build/CMakeFiles/CMakeOutput.log";
          echo "# $cmake_output_log :";
          cat "$cmake_output_log";

    - name: linux
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - sourceline: 'ppa:lopin/git-buildpackage-backports'
          packages:
            - cmake make g++
            - libssl-dev libsodium-dev libcurl4-openssl-dev libavahi-compat-libdnssd-dev libsystemd-dev
            - xorg-dev libx11-dev libgl1-mesa-glx libegl1-mesa
            - qtbase5-dev qtdeclarative5-dev libqt5svg5-dev
            - dpkg-dev git-buildpackage fakeroot debhelper
      script:
        - echo '##### script -##### (jobs-include-linux-script) '
        - >-
          echo '# create debian/changelog from git history';
          gbp dch --ignore-branch
        - >-
          echo '# make linux DEB package';
          dpkg-buildpackage -us -uc


after_script:
  - echo '##### after_script -#####'
  - du -h -d 3 ~ "$TRAVIS_BUILD_DIR"
  - find ~/* -print0 | xargs -0 ls -ld
  - find 'C:\' -iname 'wix.targets' -print0 | xargs -0 ls -ld
  - find 'C:\' -iname 'msbuild.exe' -print0 | xargs -0 ls -ld
  - find 'C:\' -iname '*.msm' -print0 | xargs -0 ls -ld
  - find 'C:\' -iname 'vs_buildto*.*' -print0 | xargs -0 ls -ld


after_failure:
  - echo '##### after_failure -#####'
  - echo "# PWD=$PWD"
  - echo "# TRAVIS_BUILD_DIR=$TRAVIS_BUILD_DIR"
  - mount
