language: cpp

#os:
#  - windows
#  - linux

matrix:
  include:
  - name: windows
    os: windows
    env:
      - CMAKE_PREFIX_PATH='C:/Qt/5.8.0/msvc2015_64'
      - qt_installer_url="https://download.qt.io/archive/online_installers/3.0/qt-unified-windows-x86-3.0.6-online.exe"
      - qt_installer_filename='qt-unified-windows-x86-3.0.6-online.exe'
      - qt_installer_automation_script='extract-qt.qs'
      - qt_installer_packages='qt.58.win64_msvc2015_64'
    cache:
      directories:
      - /c/Qt
      - /qt_installer/download
  - name: linux
    os: linux
    dist: xenial

addons:
  apt:
    sources:
    - sourceline: 'ppa:lopin/git-buildpackage-backports'
    packages:
    - cmake make g++
    - libssl-dev libsodium-dev libcurl4-openssl-dev libavahi-compat-libdnssd-dev libsystemd-dev
    - xorg-dev libx11-dev libgl1-mesa-glx libegl1-mesa qtbase5-dev qtdeclarative5-dev libqt5svg5-dev
    - dpkg-dev git-buildpackage fakeroot

install:
  - if [[ "$TRAVIS_OS_NAME" = "windows" ]]; then
      mkdir -p '/qt_installer/download' ;
      cp "$qt_installer_automation_script" "/qt_installer/" ;
      cd '/qt_installer/download' ;
      echo '# download Qt installer if in cache already' ;
      if ! [-e "$qt_installer_filename" ]; then wget --progress=bar:force:noscroll "$qt_installer_url" ; fi ;
      cp "../extract-qt.qs" . ;
      env OUTPUT='C:/Qt' PACKAGES="$qt_installer_packages" "./$qt_installer_filename" -v --script 'extract-qt.qs' | grep -E '(QTCI|operation)' ;
      rm 'extract-qt.qs' ;
    fi

# env OUTPUT='C:/Qt' PACKAGES="$qt_installer_packages" "./$qt_installer_filename" --script 'extract-qt.qs' ;
#      env OUTPUT='C:/Qt' PACKAGES="$qt_installer_packages" "./$qt_installer_filename" --script '../extract-qt.qs' ;
#env OUTPUT='C:/Qt' PACKAGES="$qt_installer_packages" "./$qt_installer_filename" -v --script "..\\$qt_installer_automation_script"
# | grep -E '(QTCI|operation)'

script:
  - echo "TRAVIS_BUILD_DIR: $TRAVIS_BUILD_DIR"
  - cd "$TRAVIS_BUILD_DIR"
  - echo "pwd: $(pwd)"
  - echo '# cmake build'
  - mkdir build
  - cd build
  - cmake -D SYNERGY_ENTERPRISE=ON ..
  - cmake --build .
  - echo '# tmp_debug'
  - find -print0 | xargs -0 ls -ld
  - echo '# make linux installer'
  - if [[ $TRAVIS_OS_NAME = linux ]]; then
      echo '# create debian/changelog from git history' ;
      cd .. && gbp dch --ignore-branch ;
      echo '# tmp_debug' ;
      find -print0 | xargs -0 ls -ld ;
      dpkg-buildpackage -us -uc ;
    fi

after_failure:
  - cat 'CMakeFiles/CMakeOutput.log'
  - cd /
  - find -print0 | xargs -0 ls -ld
