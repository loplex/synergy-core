language: cpp

#os:
#  - windows
#  - linux

matrix:
  include:
  - name: windows
    os: windows
    env:
      - CMAKE_PREFIX_PATH='C:\Qt\5.9.9\msvc2015_64'
#      - qt_installer_url="http://download.qt.io/official_releases/online_installers/qt-unified-windows-x86-online.exe"
#      - qt_installer_filename='qt-unified-windows-x86-online.exe'
      - qt_installer_url='https://download.qt.io/archive/online_installers/3.2/qt-unified-windows-x86-3.2.3-online.exe'
      - qt_installer_download_dir='/c/qt_installer'
      - qt_installer_filename='qt-unified-windows-x86-3.2.3-online.exe'
      - QT_INSTALLER_DIR='C:\Qt'
      - QT_INSTALLER_PACKAGES='qt.qt5.599.win64_msvc2015_64'
      - qt_msvc2015_dir='/c/Qt/5.9.9/msvc2015_64'
    cache:
      directories:
      - /c/Qt
      - /c/qt_installer
  - name: linux
    os: linux
    dist: xenial

addons:
  apt:
    sources:
    - sourceline: 'ppa:lopin/git-buildpackage-backports'
    packages:
    - cmake make g++
    - libssl-dev libsodium-dev libcurl4-openssl-dev libavahi-compat-libdnssd-dev libsystemd-dev
    - xorg-dev libx11-dev libgl1-mesa-glx libegl1-mesa qtbase5-dev qtdeclarative5-dev libqt5svg5-dev
    - dpkg-dev git-buildpackage fakeroot debhelper

install:
  - if [[ "$TRAVIS_OS_NAME" = "windows" ]]; then
      set -x ;

      echo '# download Qt installer if not already (cached)' ;
      qt_installer_download_dir='/c/qt_installer' ;
      mkdir -p "$qt_installer_download_dir" ;
      if ! [ -e "$qt_installer_filename" ]; then wget --progress=bar:force:noscroll "$qt_installer_url" -O "${qt_installer_download_dir}/${qt_installer_filename}" ; fi ;

      if ! [ -d "$qt_msvc2015_dir" ]; then
        echo '# preparing Qt account login' ;
        mkdir -p "${APPDATA}\\Qt" ;
        "./qtaccount_ini_gen.sh" > "${APPDATA}\\Qt\\qtaccount.ini" ;

        echo '# installing packages using Qt online installer' ;
        "${qt_installer_download_dir}/${qt_installer_filename}" -v --script "./extract-qt.qs" ;
      fi ;

      ls -la ;

      choco install nuget.commandline ;
      nuget install WiX.Toolset ;
    fi

script:
  - cd "$TRAVIS_BUILD_DIR"
  - echo '# cmake build'
  - mkdir build
  - cd build
  - cmake -DSYNERGY_ENTERPRISE=ON ..
  - cmake --build .
  - echo '# tmp_debug'
  - echo 'find -print0 | xargs -0 ls -ld'
  - echo '# make linux installer'
  - if [[ $TRAVIS_OS_NAME = linux ]]; then
      echo '# create debian/changelog from git history' ;
      cd .. && gbp dch --ignore-branch ;
      echo '# tmp_debug' ;
      echo 'find -print0 | xargs -0 ls -ld' ;
      dpkg-buildpackage -us -uc ;
    fi

after_failure:
  - pwd
  - cat "$TRAVIS_BUILD_DIR/build/CMakeFiles/CMakeOutput.log"
  - cd "$TRAVIS_BUILD_DIR"
  - find -print0 | xargs -0 ls -ld
