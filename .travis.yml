language: cpp

#os:
#  - windows
#  - linux

matrix:
  include:
  - name: windows
    os: windows
    env: CMAKE_PREFIX_PATH='C:/Qt/5.8.0/msvc2015_64'
    cache:
      directories:
      - /c/Qt
  - name: linux
    os: linux
    dist: xenial

addons:
  apt:
    sources:
    - sourceline: 'ppa:lopin/git-buildpackage-backports'
    packages:
    - cmake make g++
    - libssl-dev libsodium-dev libcurl4-openssl-dev libavahi-compat-libdnssd-dev libsystemd-dev
    - xorg-dev libx11-dev libgl1-mesa-glx libegl1-mesa qtbase5-dev qtdeclarative5-dev libqt5svg5-dev
    - dpkg-dev git-buildpackage fakeroot

#before_install:
#  - echo "DONE before_install"

install:
  - echo "if ! [[ -d '/c/Qt' ]]; then mkdir '/c/Qt'; fi"
  - if [[ "$TRAVIS_OS_NAME" = "windows" && ! -d "/c/Qt/5.8.0/msvc2015_64" ]]; then
      qt_installer_filename='qt-unified-windows-x86-3.0.6-online.exe';
      qt_installer_automation_script='extract-qt.qs';
      echo "qt_installer_automation_script=$qt_installer_automation_script";
      wget --progress=bar:force:noscroll "https://download.qt.io/archive/online_installers/3.0/${qt_installer_filename}";
      if [[ -z "$VERBOSE_QT_INSTALL" ]]; then
        qt_install_cmd="./${qt_installer_filename} --script ${qt_installer_automation_script}";
        echo "qt_install_cmd=$qt_install_cmd";
        env OUTPUT='C:/Qt' PACKAGES='qt.58.win64_msvc2015_64' $qt_install_cmd;
      else
        qt_install_cmd="./${qt_installer_filename} -v --script ${qt_installer_automation_script} | grep -E '(QTCI|operation)'";
        qt_install_cmd="./${qt_installer_filename} -v --script ${qt_installer_automation_script}";
        echo "qt_install_cmd=$qt_install_cmd";
        echo env OUTPUT='C:/Qt' PACKAGES='qt.58.win64_msvc2015_64' $qt_install_cmd;
        env OUTPUT='C:/Qt' PACKAGES='qt.58.win64_msvc2015_64' $qt_install_cmd | grep -E '(QTCI|operation)';
      fi;
    fi
  - echo "DONE install"

# LIST_PACKAGES=0 && OUTPUT='C:/Qt' && PACKAGES=qt.58.win64_msvc2015_64 && ./${qt_installer_filename} -v --script extract-qt.qs;
#  - if [[ $TRAVIS_OS_NAME = windows ]]; then
#      qt_installer_filename='qt-unified-windows-x86-3.0.6-online.exe';
#      wget "https://download.qt.io/archive/online_installers/3.0/$qt_installer_filename";
#      qt-unified-windows-x86-3.0.6-online.exe ;
#      chmod +x "$qt_installer_filename";
#      qt_install_cmd="${qt_installer_filename} -v --script './extract-qt.qs' | grep '\(QTCI\|operation\)'";
#      sh -c '$qt_installer_filename';
#    fi
#OUTPUT='C:/Qt' && PACKAGES='qt.58.win64_msvc2015_64' && $qt_install_cmd ;    # printf '#choco install wixtoolset;';


#env:
#  - CMAKE_PREFIX_PATH='C:/Qt/5.8.0/msvc2015_64'

script:
  - mkdir build
  - cd build
  - echo "CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH"
  - cmake -D SYNERGY_ENTERPRISE=ON .. || ( cat 'CMakeFiles/CMakeOutput.log' ; false )
  - echo ">>> DONE configure"
  - cmake --build .
  - echo ">>> DONE build"
  - find -print0 |xargs -0 ls -ld
  - if [[ $TRAVIS_OS_NAME = linux ]]; then
      gbp dch --ignore-branch;
      cat debian/changelog;
      dpkg-buildpackage -us -uc;
    fi
  - echo ">>> DONE <<<"

#  - mytmp=$(mktemp -d)
#  - cd $mytmp
#  - git clone https://github.com/loplex/synergy-core.git loplex/synergy-core
#  - cd loplex/synergy-core
#  - git checkout v1.x_lopin
#  - git checkout --detach
#  - gbp dch
